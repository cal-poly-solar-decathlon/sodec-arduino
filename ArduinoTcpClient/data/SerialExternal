//
//  SerialExternal.c
//  
//
//  Created by Timothy Ambrose on 3/1/15.
//  Copyright (c) 2015 Luminoscity®. All rights reserved.
//

#include <stdio.h>
#include "SerialExternal.h"

/* checksumCheck
 * return equality of received checksum value and calculated checksum
 */
int checksumCheck(uint16_t temp, uint16_t humid, char checksum) {
   char sum = 0;
   int i;
   
   for (i = 0; i < 2; ++i)
      sum += (temp >> i * 8) & 0xFF;
   for (i = 0; i < 2; ++i)
      sum += (humid >> i * 8) & 0xFF;
   
   return checksum == sum;
}

/* ProcessUART1
 * read from UART1 the temperature and humidity data in the format (1 byte at a time):
 * 'T'<temp><temp>'H'<humidity><humidity>'C'<checksum>
 * sends to ('s')server or ('t')terminal connected by default to serial0
 */
void ProcessUART1(char where, char *temperature, char *humidity, char *checksum,
                  char *type) {
   Serial1.readBytes(type, 1);        //read first 
   if (*type == 'T') {                  //read temp data
      Serial1.readBytes(temperature, 2);
   }
   else if (*type == 'H') {             //read humidity data
      Serial1.readBytes(humidity, 2);
   }
   else if (*type == 'C') {             //read checksum byte
      Serial1.readBytes(&checksum, 1);
      //verify checksum
      if (checksumCheck(*(uint16_t *)temperature, *(uint16_t *)humidity, 
                        checksum)) {
         if (where == 's') {          //send ASCII data to server
            piServer.print("Temperature1: ");
            piServer.print((*(uint16_t *)temperature) / 10.0, 1);
            piServer.print(" °C\tHumidity1: ");
            piServer.print((*(uint16_t *)humidity) / 10.0, 1);
            piServer.print("%\n\r");
         }
         else {                       //send ASCII data to terminal
            Serial.print("Temperature1: ");
            Serial.print((*(uint16_t *)temperature) / 10.0, 1);
            Serial.print(" °C\tHumidity1: ");
            Serial.print((*(uint16_t *)humidity) / 10.0, 1);
            Serial.print("%\n\r");
         }
      }
      else {            //checksum wrong, print error to terminal
         Serial.println("BAD checksum");      
      }
   }
}

/* ProcessUART2
 * read from UART2 (same as ProcessUART1
 */
void ProcessUART2(char where, char *temperature, char *humidity, char *checksum,
                  char *type) {
   Serial2.readBytes(type, 1);
   if (*type == 'T') {
      Serial2.readBytes(temperature, 2);
   }
   else if (*type == 'H') {
      Serial2.readBytes(humidity, 2);
   }
   else if (*type == 'C') {
      Serial2.readBytes(&checksum, 1);
      if (checksumCheck(*(uint16_t *)temperature, *(uint16_t *)humidity, 
                        checksum)) {
         if (where == 's') {
            piServer.print("Temperature2: ");
            piServer.print((*(uint16_t *)temperature) / 10.0, 1);
            piServer.print(" °C\tHumidity2: ");
            piServer.print((*(uint16_t *)humidity) / 10.0, 1);
            piServer.print("%\n\r");
         }
         else {
            Serial.print("Temperature2: ");
            Serial.print((*(uint16_t *)temperature) / 10.0, 1);
            Serial.print(" °C\tHumidity2: ");
            Serial.print((*(uint16_t *)humidity) / 10.0, 1);
            Serial.print("%\n\r");
         }
      }
      else {
         Serial.println("BAD");
      }
   }
}

/* ProcessUART3
 * read from UART3 (same as ProcessUART1
 */
void ProcessUART3(char where, char *temperature, char *humidity, char *checksum,
                  char *type) {
   Serial3.readBytes(&type, 1);
   if (type == 'T') {
      Serial3.readBytes(temperature, 2);
   }
   else if (type == 'H') {
      Serial3.readBytes(humidity, 2);
   }
   else if (type == 'C') {
      Serial3.readBytes(&checksum, 1);
      if (checksumCheck(*(uint16_t *)temperature, *(uint16_t *)humidity, 
                        checksum)) {
         if (where == 's') {
            piServer.print("Temperature3: ");
            piServer.print((*(uint16_t *)temperature) / 10.0, 1);
            piServer.print(" °C\tHumidity3: ");
            piServer.print((*(uint16_t *)humidity) / 10.0, 1);
            piServer.print("%\n\r");
         }
         else {
            Serial.print("Temperature3: ");
            Serial.print((*(uint16_t *)temperature) / 10.0, 1);
            Serial.print(" °C\tHumidity3: ");
            Serial.print((*(uint16_t *)humidity) / 10.0, 1);
            Serial.print("%\n\r");
         }
      }
      else {
         Serial.println("BAD");
      }
   }
}